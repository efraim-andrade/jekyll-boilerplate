// ==================================================
// FUNÇÃO PARA FONT-FAMILY
// ==================================================
@function font($name, $variant: null) {
    @if($variant != null) {
        @return map-get(map-get($fonts, $name), $variant);
    } @else {
        @return map-get($fonts, $name);
    }
};


// ==================================================
// FUNÇÃO PARA AS CORES
// ==================================================
@function color($val) {
    @return map-get($colors, $val);
};


// ==================================================
// MIXIN PARA ALINHAMENTO
// 1º parâmetro é o alinhamento no eixo X
// Valores primeiro parâmetro: start, center, end, between e around
//
// 2º parâmetro é o alinhamento no eixo Y
// Valores segundo parâmetro: start, center, end e base
// ==================================================
@mixin align($x: null, $y: null) {
    display: flex;
    flex-wrap: wrap;

    @if($x == start) {
        justify-content: flex-start;
    } @else if($x == center) {
        justify-content: center;
    } @else if($x == end) {
        justify-content: flex-end;
    } @else if($x == between) {
        justify-content: space-between;
    } @else if($x == around) {
        justify-content: space-around
    };

    @if($y == start) {
        align-items: flex-start;
    } @else if($y == center) {
        align-items: center;
    } @else if($y == end) {
        align-items: flex-end;
    } @else if($y == base) {
        align-items: baseline;
    };
};


// ==================================================
// MIXIN PARA USAR ÍCONES COM OS
// PSEUDO-ELEMENTOS BEFORE OU AFTER
// ==================================================
@mixin icon($val, $family) {
    &:before {
        content: $val;
        font-family: $family;
    }
};